# -*- mode: ruby -*-
# vi: set ft=ruby :

CONTROLLER_IP_START=10
WORKER_IP_START=50
NETWORK="192.168.56."
NUM_CONTROLLER_NODES=1
NUM_WORKER_NODES=1
SSH_PUB_KEY_NAME = "id_rsa.pub"
USER_NAME = "quan"

Vagrant.configure("2") do |config|
  vagrant_root = File.dirname(__FILE__)
  ssh_pub_key = File.readlines("#{vagrant_root}/../../#{SSH_PUB_KEY_NAME}").first.strip
  config.vm.synced_folder "#{vagrant_root}/../..", "/home/#{USER_NAME}", disabled: false
  config.vm.provision "shell", inline: <<-SHELL
    ufw allow 22/tcp
    useradd -s /bin/bash -d /home/#{USER_NAME}/ -m -G sudo #{USER_NAME}
    echo '#{USER_NAME} ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
    mkdir -p /home/#{USER_NAME}/.ssh && echo #{ssh_pub_key} >> /home/#{USER_NAME}/.ssh/authorized_keys
    chown -R #{USER_NAME} /home/#{USER_NAME}/.ssh
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    systemctl restart sshd

    for i in $(seq 1 #{NUM_CONTROLLER_NODES})
    do
      sed -i "/^.*controller-${i}$/d" /etc/hosts
      echo "#{NETWORK}$((#{CONTROLLER_IP_START}+i))  controller-${i}" >> /etc/hosts
    done

    for i in $(seq 1 #{NUM_WORKER_NODES})
    do
      sed -i "/^.*worker-${i}$/d" /etc/hosts
      echo "#{NETWORK}$((#{WORKER_IP_START}+i))  worker-${i}" >>  /etc/hosts
    done
    
  SHELL
  config.vm.box = "ubuntu/focal64"
  config.vm.box_check_update = false

  (1..NUM_CONTROLLER_NODES).each do |idx|
    config.vm.define "controller-#{idx}" do |controller|
      controller.vm.hostname = "controller-#{idx}"
      controller.vm.network "private_network", 
        ip: NETWORK + "#{CONTROLLER_IP_START + idx}"

      controller.vm.provision "shell", inline: <<-SHELL
        curl -LO https://go.dev/dl/go1.18.2.linux-amd64.tar.gz
        rm -rf /usr/local/go && tar -C /usr/local -xzf go1.18.2.linux-amd64.tar.gz
        echo "export PATH=\$PATH:/usr/local/go/bin" >> /etc/profile
      SHELL
      
      controller.vm.provider "virtualbox" do |vb|
        vb.gui = false
        vb.memory = "2048"
        vb.cpus = 1
      end    
    end
  end
  

  (1..NUM_WORKER_NODES).each do |i|
    config.vm.define "worker-#{i}" do |node|
      node.vm.hostname = "worker-#{i}"
      node.vm.network "private_network", ip: NETWORK + "#{WORKER_IP_START + i}"

      node.vm.provider "virtualbox" do |vb|
          vb.memory = 2048
          vb.cpus = 1
          # vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end
      # node.vm.provision "shell", path: "scripts/common.sh"
      # node.vm.provision "shell", path: "scripts/node.sh"
    end
  end
  
end
